---
layout: post
title: CloudFlare(Free-Plan) 사용기
date: 2017-03-04 04:51:04.000000000 +09:00
---
[CloudFlare](https://www.cloudflare.com)는 CDN 서비스이다. DNS, SSL, 방화벽, DDOS로부터의 방어 등등의 다양한 기능들도 제공한다. 특히 무료로 간단하게 사용할 수 있다는 점이 큰 장점이다. 굉장히 간단하게 버튼 몇번으로 내가 만든 홈페이지에 여러가지 기능을 붙일 수 있기 때문에 홈페이지 구축 후 무조건적으로 사용하게 되었던 서비스이다.

CloudFlare의 가장 대표적인 기능인 [__CDN__](https://en.wikipedia.org/wiki/Content_delivery_network)이 무엇인가 하면 __Content Delivery Network__의 줄임말로 웹 어플리케이션 및 스티리밍 미디어를 비롯한 콘텐츠를 전송하는 것에 최적화된 서버들을 여러 곳에 분산시켜 엔드유저의 요청을 분산을 유도하는 역할을 하는 것이다. 엔드 유저가 요청을 하면 최적으로 배치되어 있는 CDN 서버가 자동으로 매핑되고 해당 서버는 요청 파일의 캐싱된 버전을 제공하게 된다. 이를 통하여 엔드 유저에게는 빠른 응답을 통한 사용성 개선, 오리진 서버에는 트래픽 절감 효과를 누릴 수 있다.

Rails, React로 홈페이지를 구축하고 어떻게 속도 개선을 할 수 있을까 알아보다가 이런 CDN의 막강한 기능을 알게 되었고 CloudFlare가 아주 간단하게 심지어 무료로 제공하고 있었기 때문에 적용을 하지 않을 수가 없었다. 가입을 하고 DNS를 전부 셋팅한 다음 주황색 구름 버튼으로 활성화 시켜주었다. 이것으로 우리의 웹 페이지는 _적토마_를 얻은 줄로만 알고 있었다.

초기에 Rails 단일 풀스택으로 쓸 때는 눈에 띄는 성능의 변화가 없었지만 아직 트래픽이 많지 않기 때문에 체감하지 못한다고 생각하였다. 그러나 Rails를 아예 REST API로 빼버리고 React를 도입하고나니 원하는 속도가 나오지 않는 것을 알게 되었다. 이유를 찾아보니 TTFB가 거의 1초 가량 넘게 걸리는 것을 확인할 수 있었다. 처음엔 Rails의 Transaction Time이 문제인 줄 알았지만 NewRelic을 보면 막상 그렇지 않거니와 Rails로의 Request는 물론 React로의 Request까지 TTFB가 다를바가 없었다. 그래서 처음엔 Nginx의 문제인가 싶어 설정을 더욱 더 정교하게 해보기도 하였고 worker 개수의 문제인가 싶어 worker 개수도 늘려주는 등 근본 없는 대책을 계속해서 세워보았었다.

그러다가 DNS 찾는 것이 문제인가?!라는 정말 그럴 수도 있나? 하는 생각으로 CloudFlare를 들어갔다가 에이 그건 아니겠지.. 하고 창을 끄려는 찰나 영롱한 주황빛의 구름을 발견하였다. 음.. 그래 CDN이나 한번 꺼볼까? 하고 구름의 영롱함을 잠시 거두었고 그것은 홈페이지에 지대한 영향을 미쳤다. 말도 안되던 TTFB가 1초에서 0.1~0.2초로 줄어들었으며 그러다보니 전체적인 웹페이지 속도가 너무나 빨라진 것을 체감할 수 있었다. 뒷통수를 제대로 맞았다.

그래서 이것과 관련하여 찾아보니 [Stop worrying about Time To First Byte (TTFB)
](https://blog.cloudflare.com/ttfb-time-to-first-byte-considered-meaningles/)라는 글이 있었다. TTFB가 조금 길어도 CDN을 통해서 전체적인 성능 개선은 이루어진다라는 것이 골자인데 일단 여기서 REST API에는 적용하지 말았어야 할 나의 실수를 알게 되었다. REST API은 JSON으로만 주고 받기 때문에 CDN의 이점을 이용할 수 없기 때문이다. 어쨋든 그럼 React에서라도 계속 사용해야할까? 라는 질문을 던지게 되었고 그건 __No__였다.

TTFB는 유저가 서버로부터 데이터를 처음으로 받아볼 때 까지 걸리는 시간인데 이 시간이 너무 길어져버리면 유저는 긴 시간동안 하염없이 기다려야만 하는 것이다. 이는 사용성에 큰 영향을 줄거라는 판단이 들었고 페이지마다 CDN이 여실히 필요한 곳이 있고 전혀 그렇지 않은 곳이 있는데 그 페이지 마다 긴 TTFB를 유저에게 경험하게 하고 싶진 않았다. 아마 무료서비스가 아니라 돈을 더 내면 페이지 별로 설정하는 기능이 있지 않을까 싶긴 한데.. 아직 제대로 찾아보지는 않았다.

결론적으로 CloudFlare의 CDN 기능을 끈 이후로 웹페이지의 속도는 비약적으로 상승했다. 사실 CloudFlare에서 이야기하는 정도의 전체적인 성능 개선을 이룰려면 컨텐츠가 굉장히 무거운 홈페이지여야만 할 것 같다. 그래서 우리 서비스와는 핏이 맞지 않았던 것이고 이건 결정자인 내가 잘못했다고 생각한다. 조금만 더 리서치를 했으면 금방 찾을 수 있는 문제였을텐데 앞만보고 달리다보니 가끔 디테일하지 못한 결정이 생기는 것 같다. 요새 CloudFlare가 이것 외에도 여러 잡음에 시달리는 것으로 알고 있는데 힘내서 좋은 서비스가 되길 바래본다.
